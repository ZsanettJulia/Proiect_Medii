// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tonko_Zsanett_Proiect.Data;

#nullable disable

namespace Tonko_Zsanett_Proiect.Migrations
{
    [DbContext(typeof(Tonko_Zsanett_ProiectContext))]
    [Migration("20240106182853_CategorieProdus")]
    partial class CategorieProdus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Categorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DenumireCategorie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.CategorieProdus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<int>("ProdusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("ProdusID");

                    b.ToTable("CategorieProdus");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Furnizor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("NumeFurnizor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Furnizor");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Produs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Denumire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FurnizorID")
                        .HasColumnType("int");

                    b.Property<decimal>("Pret")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ID");

                    b.HasIndex("FurnizorID");

                    b.ToTable("Produs");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.CategorieProdus", b =>
                {
                    b.HasOne("Tonko_Zsanett_Proiect.Models.Categorie", "Categorie")
                        .WithMany("CategoriiProdus")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tonko_Zsanett_Proiect.Models.Produs", "Produs")
                        .WithMany("CategoriiProdus")
                        .HasForeignKey("ProdusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Produs", b =>
                {
                    b.HasOne("Tonko_Zsanett_Proiect.Models.Furnizor", "Furnizor")
                        .WithMany("Produse")
                        .HasForeignKey("FurnizorID");

                    b.Navigation("Furnizor");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Categorie", b =>
                {
                    b.Navigation("CategoriiProdus");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Furnizor", b =>
                {
                    b.Navigation("Produse");
                });

            modelBuilder.Entity("Tonko_Zsanett_Proiect.Models.Produs", b =>
                {
                    b.Navigation("CategoriiProdus");
                });
#pragma warning restore 612, 618
        }
    }
}
